# generated by datamodel-codegen:
#   filename:  schema_json_graph_node_base_v0_0_1.json
#   timestamp: 2025-03-23T10:29:54+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, constr


class JsonGraphNodeBase(BaseModel):
    extJsonPatchHash: Optional[
        constr(pattern=r'^[0-9a-f]{64}$', min_length=64, max_length=64)
    ] = Field(..., description='sha256 hexdigest of extJsonPatch document')
    documentHash: constr(pattern=r'^[0-9a-f]{64}$', min_length=64, max_length=64) = (
        Field(..., description='sha256 hexdigest of associated JSON document')
    )
    sourceHashes: Optional[
        List[constr(pattern=r'^[0-9a-f]{64}$', min_length=64, max_length=64)]
    ] = Field(None, description='List with source node hashes')
    meta: Optional[Dict[str, Any]] = Field(
        None, description='Additional optional meta information'
    )
